version: "3.8"

services:
  sidekiq:
    build:
      context: ./rails_app
      dockerfile: Dockerfile
    container_name: rails_sidekiq
    volumes:
      - ./rails_app:/home/hosting/app
    working_dir: /home/hosting/app
    depends_on:
      - db
      - redis
    environment:
      - DATABASE_HOST=db
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=postgres
      - REDIS_URL=redis://redis:6379/0
      - GROVER_EXECUTABLE_PATH=/usr/bin/google-chrome-stable
      - DISPLAY=:99
    command: bash -lc "bundle exec sidekiq"
  backend:
    build:
      context: ./rails_app
      dockerfile: Dockerfile
    container_name: rails_backend
    tty: true
    stdin_open: true
    volumes:
      - ./rails_app:/home/hosting/app
    working_dir: /home/hosting/app
    ports:
      - "3000:3000"
    depends_on:
      - db
      - redis
    environment:
      - DATABASE_HOST=db
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=postgres
      - REDIS_URL=redis://redis:6379/0
    command: bash -lc "rm -f tmp/pids/server.pid && bundle exec rails server -b 0.0.0.0 -p 3000"

  db:
    image: postgres:14
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: vue_frontend
    ports:
      - "8080:8080"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    working_dir: /app
    environment:
      - CHOKIDAR_USEPOLLING=true
    command: npm run dev
    depends_on:
      - backend

volumes:
  pgdata:
  redis_data:
